{"posts":[{"title":"Setting up Miniconda on Ubuntu","text":"1sudo wget -c https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh 1sudo chmod +x Miniconda3-latest-Linux-x86_64.sh 1./Miniconda3-latest-Linux-x86_64.sh 12conda activateconda env list Reference Setting up Miniconda on Ubuntu","link":"/blog/ubuntu_miniconda/"},{"title":"note: Cython 基礎知識","text":"Cython什麼是Cython？!!! note Chat GPT: Cython是一種基於Python的靜態編譯器，可以將Python代碼轉換成C語言代碼，進而編譯成機器碼，從而提高Python代碼的運行速度和效率。Cython既保留了Python的簡單易用和動態特性，同時也支持C語言的靜態類型聲明和高效內存管理，是一種非常強大的Python優化工具。Cython還可以用於編寫Python擴展、簡化C/C++代碼、加速數值計算、並行運算等方面的應用。 Cython的優點 執行速度快 語法簡單 靜態聲明 兼容性高 應用場景 讓 Python 執行更快 簡化繁雜的 C 語法，改用 Python 的寫法，增加維護、可讀性 安裝和配置1pip install cython 1sudo apt install gcc Python和Cython的區別 特性 Python Cython 靜態類型聲明 不支持 支持 靜態編譯 不支持 支持 運行速度 較慢 較快 內存使用 較高 較低 與C/C++代碼集成 需要使用Cython或其他庫 直接支持 優化效果 較弱 較強 Cython中的靜態型別 Python Cython bool bint int long char short int long long long float float double long double complex float complex double complex bytes str unicode char * std::string Reference What are all the types available in Cython? 常用的Cython指令 pyximport 直接從Cython代碼中引入模塊或函數 cdef 聲明Cython中的C變量和函數 cpdef 定義既可被Python調用又可被Cython調用的函數 cimport import .pyx .pxd .pxi 的檔案 Reference Cython中def,cdef,cpdef的区别 第13篇：Cython封装C++类接口","link":"/blog/note/cython_basic/"},{"title":"note: 開源專案 License","text":"The MIT License (MIT) 被授權人權利允許任何人以任何方式使用、修改和分發代碼，包括商業用途，但作者不對代碼負責。 被授權人義務在軟體和軟體的所有副本中都必須包含以上著作權聲明和本許可聲明。 GNU General Public License (GNU GPL) 要求任何使用或分發代碼的人都必須使用相同的許可證並公開他們的修改。 Apache License 允許任何人以任何方式使用、修改和分發代碼，包括商業用途，但作者對代碼有版權並保留某些權利 Berkeley Software Distribution license (BSD) 與 MIT 許可證類似，允許任何人以任何方式使用、修改和分發代碼，包括商業用途，但作者不對代碼負責。","link":"/blog/note/open_source_license/"}],"tags":[{"name":"Ubuntu, Python","slug":"Ubuntu-Python","link":"/blog/tags/Ubuntu-Python/"},{"name":"Python","slug":"Python","link":"/blog/tags/Python/"},{"name":"Github, Note","slug":"Github-Note","link":"/blog/tags/Github-Note/"}],"categories":[],"pages":[]}